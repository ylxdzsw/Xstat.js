#!/usr/bin/env node

const fs = require('fs')
const ts = require('typescript')

const files = fs.readdirSync(__dirname + '/src').map(x => __dirname + '/src/' + x)
const read = require('util').promisify(fs.readFile)

let hot = false

const compile = async () => {
    if (hot) {
        return
    } else {
        hot = true
        setTimeout(() => { hot = false }, 2000)
    }

    const tscode = (await Promise.all(files.map(x=>read(x)))).reduce((x,y)=>x+y, '')
    const jscode = ts.transpileModule(tscode, { compilerOptions: { target: 'ES2017', strict: true } })

    fs.writeFile(__dirname + "/xstat.js", `((Xstat)=>{${jscode.outputText}})(exports||(this.Xstat={}))`, ()=>0)

    console.log(`compiled at ${new Date().toLocaleTimeString()}`)
}

files.forEach(file => fs.watch(file, compile))

console.log("watching...")
